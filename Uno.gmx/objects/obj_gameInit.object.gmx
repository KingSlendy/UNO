<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.maxPlayers = 5;
global.playerID = -1;

ini_open("Data.ini");
global.playerName = ini_read_string("Connection info", "Username", "User");
global.ip = ini_read_string("Connection info", "IP", "127.0.0.1");
global.numberPlayers = ini_read_real("Game info", "NumberPlayers", 2);
global.specialsFrequency = ini_read_real("Game info", "SpecialsFrecuency", 1);
global.onlyQuestion = ini_read_real("Game info", "OnlyQuestion", false);
global.gameMode = ini_read_real("Game info", "GameMode", mode_normal);
global.teamsMode = ini_read_real("Game info", "TeamsMode", false);
ini_close();

global.currentTeam = team_red;

enum packets {
    playerJoined, //Player joining the server
    playersInfo, //How many players there are in the sever and its names
    playerLeaving, //Player leaving the server
    playerCardsUpdate, //Updating what cards each player have
    playerTurnInfo, //The info of everything the player did on its turn
    playerWon, //Which player won
    playerStopPlaying, //Sets the player sent to not playing
    canHostJoin, //Determines if the player can host/join
    sentUNO //Player sent an UNO
}

if (!instance_exists(obj_cursor))
    instance_create(0, 0, obj_cursor);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
